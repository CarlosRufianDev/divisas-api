// ==============================
// TOKENS DE USUARIO Y ADMIN
// ==============================
// Copia aqu√≠ los tokens tras hacer login para pruebas autenticadas
@adminToken = PON_AQUI_EL_TOKEN_DEL_ADMIN
@userToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODgyYjJkMjYwNWYxMzhiZDM1YzgxOTgiLCJlbWFpbCI6InBydWViYXVzdWFyaW9AZW1haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE3NTM3OTUwMzQsImV4cCI6MTc1MzgwMjIzNH0.wimqKggojceqSzSOGnUIu3H3Cfdn3skTl7kdf7dojGk
@realToken = PON_AQUI_EL_TOKEN_DEL_USUARIO_REAL

############################################################
### üü¢ AUTENTICACI√ìN Y USUARIOS
############################################################

### Registro de administrador (solo una vez)
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "email": "admin@email.com",
  "password": "Prueba123",
  "role": "admin",
  "name": "Admin Test"
}

### Login de administrador
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "admin@email.com",
  "password": "Prueba123"
}

### Registro de usuario de pruebas
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "email": "pruebausuario@email.com",
  "password": "Pruebausuario123",
  "name": "Usuario Prueba"
}

### Login de usuario de pruebas
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "pruebausuario@email.com",
  "password": "Pruebausuario123"
}

### Registro de usuario real (para email)
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "email": "‚ñàREDACTED_EMAIL‚ñà",
  "password": "TuPasswordSegura123",
  "name": "Carlos Rufi√°n"
}

### Login de usuario real
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "‚ñàREDACTED_EMAIL‚ñà",
  "password": "TuPasswordSegura123"
}

### Borrar usuario de pruebas (solo admin)
DELETE http://localhost:3000/api/auth/delete
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "email": "pruebausuario@email.com"
}

### Borrar mi propia cuenta (usuario autenticado)
DELETE http://localhost:3000/api/auth/me
Authorization: Bearer {{userToken}}

############################################################
### üí± CONVERSI√ìN DE MONEDAS
############################################################

### Conversi√≥n v√°lida (usuario real)
POST http://localhost:3000/api/convert
Content-Type: application/json
Authorization: Bearer {{realToken}}

{
  "from": "USD",
  "to": "EUR",
  "amount": 3555
}

### ‚ùå amount negativo (debe dar 400)
POST http://localhost:3000/api/convert
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "amount": -50
}

### ‚ùå c√≥digo de moneda inv√°lido (debe dar 400)
POST http://localhost:3000/api/convert
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "US",
  "to": "EUR",
  "amount": 100
}

### ‚ùå tipo de dato incorrecto (debe dar 400)
POST http://localhost:3000/api/convert
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "amount": "cien"
}

############################################################
### üìú HISTORIAL Y FILTROS
############################################################

### Historial del usuario autenticado (todos)
GET http://localhost:3000/api/historial
Authorization: Bearer {{userToken}}

### Solo USD ‚Üí EUR
GET http://localhost:3000/api/historial?from=USD&to=EUR
Authorization: Bearer {{userToken}}

### Conversiones de al menos 50
GET http://localhost:3000/api/historial?minAmount=50
Authorization: Bearer {{userToken}}

### Conversiones de m√°ximo 100
GET http://localhost:3000/api/historial?maxAmount=100
Authorization: Bearer {{userToken}}

### Entre fechas
GET http://localhost:3000/api/historial?startDate=2025-07-01&endDate=2025-07-04
Authorization: Bearer {{userToken}}

### Historial paginado (primera p√°gina, 5 resultados)
GET http://localhost:3000/api/historial?page=1&limit=5
Authorization: Bearer {{userToken}}

############################################################
### üóëÔ∏è BORRADO DE HISTORIAL
############################################################

### Borrar todo el historial (usuario autenticado)
DELETE http://localhost:3000/api/historial
Authorization: Bearer {{userToken}}

### Borrar una conversi√≥n por ID (ajusta el ID real)
DELETE http://localhost:3000/api/historial/<ID>
Authorization: Bearer {{userToken}}

### Eliminar historial de un usuario (solo admin)
DELETE http://localhost:3000/api/historial/user/<ID_DEL_USUARIO>
Authorization: Bearer {{adminToken}}

### Limpieza de historial antiguo (solo admin)
GET http://localhost:3000/api/clean-old
Authorization: Bearer {{adminToken}}

############################################################
### üîî ALERTAS DE VARIACI√ìN
############################################################

### Crear alerta (usuario real, para recibir email)
POST http://localhost:3000/api/alerts
Content-Type: application/json
Authorization: Bearer {{realToken}}

{
  "from": "EUR",
  "to": "USD",
  "intervalDays": 1
}

### Crear alerta (usuario de pruebas)
POST http://localhost:3000/api/alerts
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "intervalDays": 1,
  "hour": 15
}

### Obtener alertas (usuario autenticado)
GET http://localhost:3000/api/alerts
Authorization: Bearer {{userToken}}

### Obtener alertas filtradas (USD y hora 15)
GET http://localhost:3000/api/alerts?from=USD&hour=15
Authorization: Bearer {{userToken}}

### ‚ùå Crear alerta con datos inv√°lidos (debe dar 400)
POST http://localhost:3000/api/alerts
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "INVALID",
  "to": "USD",
  "intervalDays": "uno"
}

### ‚ùå Crear alerta con moneda de destino igual a la de origen (debe dar 400)
POST http://localhost:3000/api/alerts
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "USD",
  "intervalDays": 1
}

### ‚ùå Eliminar alerta sin token (debe dar 401)
DELETE http://localhost:3000/api/alerts/<ID_DE_LA_ALERTA>

### Eliminar alerta por ID (usuario autenticado)
DELETE http://localhost:3000/api/alerts/<ID_DE_LA_ALERTA>
Authorization: Bearer {{userToken}}

### Actualizar alerta por ID (usuario autenticado)
PUT http://localhost:3000/api/alerts/<ID_DE_LA_ALERTA>
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "intervalDays": 2,
  "hour": 10
}

############################################################
### üîî ALERTAS MEJORADAS
############################################################

### Crear alerta por porcentaje - "Av√≠same si USD/EUR sube +2%"
POST http://localhost:3000/api/alerts/percentage
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "email": "pruebausuario@email.com",
  "percentageThreshold": 2,
  "percentageDirection": "up"
}

### Crear alerta por porcentaje - "Av√≠same si GBP/USD baja -3%"
POST http://localhost:3000/api/alerts/percentage
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "GBP",
  "to": "USD",
  "email": "pruebausuario@email.com",
  "percentageThreshold": 3,
  "percentageDirection": "down"
}

### Crear alerta por porcentaje - "Av√≠same si EUR/JPY cambia ¬±5% en cualquier direcci√≥n"
POST http://localhost:3000/api/alerts/percentage
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "EUR",
  "to": "JPY",
  "email": "pruebausuario@email.com",
  "percentageThreshold": 5,
  "percentageDirection": "both"
}

### ‚ùå Test alerta porcentaje con valor inv√°lido (debe dar 400)
POST http://localhost:3000/api/alerts/percentage
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "email": "pruebausuario@email.com",
  "percentageThreshold": 100
}

############################################################
### üö´ TESTS DE ERRORES Y ACCESO NO AUTORIZADO
############################################################

### ‚ùå Registro con email ya existente (debe dar 409)
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "email": "pruebausuario@email.com",
  "password": "Pruebausuario123",
  "name": "Usuario Prueba"
}

### ‚ùå Registro con email inv√°lido (debe dar 400)
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "email": "noesunemail",
  "password": "123"
}

### ‚ùå Login con contrase√±a incorrecta (debe dar 401)
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "pruebausuario@email.com",
  "password": "contrase√±a_incorrecta"
}

### ‚ùå Acceso a historial sin token (debe dar 401)
GET http://localhost:3000/api/historial

### ‚ùå Borrar historial sin token (debe dar 401)
DELETE http://localhost:3000/api/historial

### ‚ùå Acceso a alertas sin token (debe dar 401)
GET http://localhost:3000/api/alerts

### ‚ùå Borrar alerta sin token (debe dar 401)
DELETE http://localhost:3000/api/alerts

############################################################
### üåç MONEDAS Y CAMBIOS
############################################################

### Listado de monedas soportadas
GET http://localhost:3000/api/monedas

### √öltimo cambio de un par de monedas
GET http://localhost:3000/api/monedas/ultimo?from=EUR&to=USD

############################################################
### üìä DASHBOARD / RESUMEN DEL USUARIO
############################################################

### Obtener dashboard/resumen del usuario autenticado
GET http://localhost:3000/api/dashboard
Authorization: Bearer {{userToken}}

############################################################
### üìä DASHBOARD MEJORADO
############################################################

### Obtener dashboard completo (con pares y monedas favoritas)
GET http://localhost:3000/api/dashboard
Authorization: Bearer {{userToken}}

############################################################
### üßÆ CALCULADORA AVANZADA
############################################################

### Conversiones m√∫ltiples (1000 USD a varias monedas)
POST http://localhost:3000/api/calculator/multiple
Content-Type: application/json

{
  "from": "USD",
  "amount": 1000,
  "currencies": ["EUR", "GBP", "JPY", "CHF"]
}

### ‚ùå Test con datos inv√°lidos (debe dar 400)
POST http://localhost:3000/api/calculator/multiple
Content-Type: application/json

{
  "from": "USD",
  "amount": -100,
  "currencies": ["EUR", "GBP"]
}

### ‚ùå Test sin currencies (debe dar 400)
POST http://localhost:3000/api/calculator/multiple
Content-Type: application/json

{
  "from": "USD",
  "amount": 1000
}

### Calculadora inversa - "¬øCu√°ntos USD necesito para obtener 500 EUR?"
POST http://localhost:3000/api/calculator/reverse
Content-Type: application/json

{
  "from": "USD",
  "to": "EUR",
  "targetAmount": 500
}

### Calculadora inversa - "¬øCu√°ntos EUR necesito para obtener 100,000 JPY?"
POST http://localhost:3000/api/calculator/reverse
Content-Type: application/json

{
  "from": "EUR",
  "to": "JPY",
  "targetAmount": 100000
}

### ‚ùå Test calculadora inversa con targetAmount negativo (debe dar 400)
POST http://localhost:3000/api/calculator/reverse
Content-Type: application/json

{
  "from": "USD",
  "to": "EUR",
  "targetAmount": -500
}

### ‚ùå Test calculadora inversa con monedas iguales (debe dar 400)
POST http://localhost:3000/api/calculator/reverse
Content-Type: application/json

{
  "from": "USD",
  "to": "USD",
  "targetAmount": 500
}

### Comparador de pares - Comparar varios pares a la vez
POST http://localhost:3000/api/calculator/compare
Content-Type: application/json

{
  "pairs": [
    { "from": "USD", "to": "EUR" },
    { "from": "USD", "to": "GBP" },
    { "from": "USD", "to": "JPY" },
    { "from": "EUR", "to": "GBP" }
  ]
}

### Comparador de pares - Solo dos pares
POST http://localhost:3000/api/calculator/compare
Content-Type: application/json

{
  "pairs": [
    { "from": "EUR", "to": "USD" },
    { "from": "GBP", "to": "USD" }
  ]
}

### ‚ùå Test comparador sin pares (debe dar 400)
POST http://localhost:3000/api/calculator/compare
Content-Type: application/json

{
  "pairs": []
}

### ‚ùå Test comparador con par inv√°lido (debe dar 400)
POST http://localhost:3000/api/calculator/compare
Content-Type: application/json

{
  "pairs": [
    { "from": "USD", "to": "USD" }
  ]
}

### Hist√≥rico de tasas - Consultar tipo de cambio en fecha espec√≠fica
POST http://localhost:3000/api/calculator/historical
Content-Type: application/json

{
  "from": "USD",
  "to": "EUR",
  "date": "2025-01-15"
}

### Hist√≥rico de tasas - Otra fecha
POST http://localhost:3000/api/calculator/historical
Content-Type: application/json

{
  "from": "GBP",
  "to": "JPY",
  "date": "2025-01-01"
}

### ‚ùå Test hist√≥rico con fecha futura (debe dar 400)
POST http://localhost:3000/api/calculator/historical
Content-Type: application/json

{
  "from": "USD",
  "to": "EUR",
  "date": "2025-12-31"
}

### ‚ùå Test hist√≥rico con formato de fecha incorrecto (debe dar 400)
POST http://localhost:3000/api/calculator/historical
Content-Type: application/json

{
  "from": "USD",
  "to": "EUR",
  "date": "15/01/2025"
}

### ‚ùå Test hist√≥rico con monedas iguales (debe dar 400)
POST http://localhost:3000/api/calculator/historical
Content-Type: application/json

{
  "from": "USD",
  "to": "USD",
  "date": "2025-01-15"
}

### Crear alerta por precio objetivo - "Av√≠same cuando USD/EUR llegue a 0.90"
POST http://localhost:3000/api/alerts/target
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "email": "pruebausuario@email.com",
  "targetRate": 0.90,
  "targetDirection": "exact"
}

### Crear alerta por precio objetivo - "Av√≠same cuando GBP/USD suba por encima de 1.30"
POST http://localhost:3000/api/alerts/target
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "GBP",
  "to": "USD",
  "email": "pruebausuario@email.com",
  "targetRate": 1.30,
  "targetDirection": "above"
}

### Crear alerta por precio objetivo - "Av√≠same cuando EUR/JPY baje por debajo de 150"
POST http://localhost:3000/api/alerts/target
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "EUR",
  "to": "JPY",
  "email": "pruebausuario@email.com",
  "targetRate": 150,
  "targetDirection": "below"
}

### ‚ùå Test alerta objetivo con precio inv√°lido (debe dar 400)
POST http://localhost:3000/api/alerts/target
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "email": "pruebausuario@email.com",
  "targetRate": -5
}

############################################################
### üíñ FAVORITOS DE PARES
############################################################

### A√±adir EUR/USD a favoritos
POST http://localhost:3000/api/favorites
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "EUR",
  "to": "USD",
  "nickname": "Mi par principal"
}

### A√±adir GBP/JPY a favoritos sin nickname
POST http://localhost:3000/api/favorites
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "GBP",
  "to": "JPY"
}

### A√±adir CHF/CAD a favoritos
POST http://localhost:3000/api/favorites
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "CHF",
  "to": "CAD",
  "nickname": "Para viajes"
}

### ‚ùå Intentar a√±adir un par duplicado (debe dar 409)
POST http://localhost:3000/api/favorites
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "EUR",
  "to": "USD",
  "nickname": "Duplicado"
}

### ‚ùå Intentar a√±adir par inv√°lido (debe dar 400)
POST http://localhost:3000/api/favorites
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "XXX",
  "to": "YYY"
}

### ‚ùå Intentar a√±adir mismo origen y destino (debe dar 400)
POST http://localhost:3000/api/favorites
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "USD"
}

### Listar todos los favoritos del usuario
GET http://localhost:3000/api/favorites
Authorization: Bearer {{userToken}}

### Actualizar nickname de un favorito (reemplaza <ID_DEL_FAVORITO>)
PUT http://localhost:3000/api/favorites/6888b5cb6cb657b829bfb295
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "nickname": "Mi par favorito actualizado"
}

### Eliminar un favorito (reemplaza <ID_DEL_FAVORITO>)
DELETE http://localhost:3000/api/favorites/6888b60f6cb657b829bfb299
Authorization: Bearer {{userToken}}

############################################################
### üí∞ MONEDAS FAVORITAS
############################################################

### A√±adir EUR a monedas favoritas (predeterminada)
POST http://localhost:3000/api/favorite-currencies
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "currency": "EUR",
  "nickname": "Mi moneda principal",
  "priority": 1,
  "isDefault": true
}

### A√±adir USD a monedas favoritas
POST http://localhost:3000/api/favorite-currencies
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "currency": "USD",
  "nickname": "D√≥lar americano",
  "priority": 2
}

### A√±adir GBP a monedas favoritas
POST http://localhost:3000/api/favorite-currencies
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "currency": "GBP",
  "nickname": "Libra esterlina",
  "priority": 3
}

### ‚ùå Intentar a√±adir moneda duplicada (debe dar 409)
POST http://localhost:3000/api/favorite-currencies
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "currency": "EUR",
  "nickname": "Euro duplicado"
}

### ‚ùå Intentar a√±adir moneda inv√°lida (debe dar 400)
POST http://localhost:3000/api/favorite-currencies
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "currency": "XXX"
}

### Listar monedas favoritas con tipos de cambio (base EUR)
GET http://localhost:3000/api/favorite-currencies
Authorization: Bearer {{userToken}}

### Listar monedas favoritas con tipos de cambio (base USD)
GET http://localhost:3000/api/favorite-currencies?base=USD
Authorization: Bearer {{userToken}}

### Obtener lista simplificada para dropdown
GET http://localhost:3000/api/favorite-currencies/dropdown
Authorization: Bearer {{userToken}}

### Actualizar moneda favorita (reemplaza <ID_DE_LA_MONEDA>)
PUT http://localhost:3000/api/favorite-currencies/6888bb23b4b36f3acf5f4efb
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "nickname": "Euro actualizado",
  "priority": 1,
  "isDefault": true
}

### Eliminar moneda favorita (reemplaza <ID_DE_LA_MONEDA>)
DELETE http://localhost:3000/api/favorite-currencies/6888bb23b4b36f3acf5f4efb
Authorization: Bearer {{userToken}}

############################################################
### üìã LOGS DE ACTIVIDAD
############################################################

### Obtener logs de actividad del usuario (√∫ltimos 30 d√≠as)
GET http://localhost:3000/api/activity-logs
Authorization: Bearer {{userToken}}

### Obtener logs filtrados por acci√≥n (solo conversiones)
GET http://localhost:3000/api/activity-logs?action=CONVERSION_SINGLE&days=7&limit=20
Authorization: Bearer {{userToken}}

### Obtener logs con paginaci√≥n (p√°gina 2)
GET http://localhost:3000/api/activity-logs?page=2&limit=10
Authorization: Bearer {{userToken}}

### Obtener estad√≠sticas de actividad (√∫ltimos 30 d√≠as)
GET http://localhost:3000/api/activity-logs/stats
Authorization: Bearer {{userToken}}

### Obtener estad√≠sticas de actividad (√∫ltimos 7 d√≠as)
GET http://localhost:3000/api/activity-logs/stats?days=7
Authorization: Bearer {{userToken}}

### Obtener acciones disponibles para filtros
GET http://localhost:3000/api/activity-logs/actions
Authorization: Bearer {{userToken}}

############################################################
### üß™ GENERAR ACTIVIDAD PARA TESTING
############################################################

### Realizar una conversi√≥n (para generar log CONVERSION_SINGLE)
POST http://localhost:3000/api/convert
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "USD",
  "to": "EUR",
  "amount": 100
}

### Ver dashboard (para generar log DASHBOARD_VIEW)
GET http://localhost:3000/api/dashboard
Authorization: Bearer {{userToken}}

### A√±adir par favorito (para generar log FAVORITE_PAIR_ADD)
POST http://localhost:3000/api/favorites
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "from": "CHF",
  "to": "SEK",
  "nickname": "Par para testing logs"
}

### Verificar logs despu√©s de la conversi√≥n
GET http://localhost:3000/api/activity-logs?days=1&limit=10
Authorization: Bearer {{userToken}}